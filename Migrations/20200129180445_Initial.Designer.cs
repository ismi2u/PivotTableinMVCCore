// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PivotTableinMVCCore.Models;

namespace PivotTableinMVCCore.Migrations
{
    [DbContext(typeof(InvoiceContext))]
    [Migration("20200129180445_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PivotTableinMVCCore.Models.Invoice", b =>
                {
                    b.Property<int>("InvoiceNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("CostCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Period")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InvoiceNumber");

                    b.ToTable("GetInvoices");

                    b.HasData(
                        new
                        {
                            InvoiceNumber = 1,
                            Amount = 10.0,
                            CostCategory = "testing",
                            Period = "2019_11"
                        },
                        new
                        {
                            InvoiceNumber = 2,
                            Amount = 20.0,
                            CostCategory = "sales2",
                            Period = "2019_11"
                        },
                        new
                        {
                            InvoiceNumber = 3,
                            Amount = 30.0,
                            CostCategory = "testing",
                            Period = "2019_12"
                        },
                        new
                        {
                            InvoiceNumber = 4,
                            Amount = 40.0,
                            CostCategory = "sales4",
                            Period = "2019_12"
                        },
                        new
                        {
                            InvoiceNumber = 5,
                            Amount = 10.0,
                            CostCategory = "sales2",
                            Period = "2019_11"
                        },
                        new
                        {
                            InvoiceNumber = 6,
                            Amount = 20.0,
                            CostCategory = "testing",
                            Period = "2019_11"
                        },
                        new
                        {
                            InvoiceNumber = 7,
                            Amount = 30.0,
                            CostCategory = "utilitis",
                            Period = "2019_12"
                        },
                        new
                        {
                            InvoiceNumber = 8,
                            Amount = 40.0,
                            CostCategory = "utilitis",
                            Period = "2019_12"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
